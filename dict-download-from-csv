#!/usr/bin/python

import argparse
import csv
import subprocess
import os

def download_files(csv_file, download_dir):
    # Create the download directory if it doesn't exist
    if not os.path.exists(download_dir):
        os.makedirs(download_dir)

    # Read the CSV file
    with open(csv_file, 'r', encoding='utf-8') as file:
        csv_reader = csv.reader(file, delimiter='|')
        next(csv_reader)  # Skip the header

        for row in csv_reader:
            link, title, _ = row  # Ignore the size column
            # Extract the file extension from the link
            file_extension = os.path.splitext(link)[1]
            # Create the output file name
            output_file_name = f"{title}{file_extension}"
            # Full path to the output file
            output_file_path = os.path.join(download_dir, output_file_name)
            # Use wget to download the file
            subprocess.run(['wget', '-O', output_file_path, link])

def main(csv_file, download_dir):
    download_files(csv_file, download_dir)
    print(f"Files have been downloaded to {download_dir}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Download files using links from a CSV file.')
    parser.add_argument('csv_file', type=str, help='The CSV file containing links and titles.')
    parser.add_argument('--download_dir', type=str, default='.', help='The directory to save the downloaded files.')
    args = parser.parse_args()
    main(args.csv_file, args.download_dir)
